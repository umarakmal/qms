{"version":3,"file":"static/js/766.cc2693f1.chunk.js","mappings":"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","sources":["component/dynamicSheet/DynReport.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport Header from \"../Header\";\r\nimport Menu from \"../Menu\";\r\nimport Footer from \"../Footer\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { isAuth } from \"../auth/helpers\";\r\nimport {\r\n  DataGrid,\r\n  GridToolbarExport,\r\n  GridToolbarContainer,\r\n} from \"@mui/x-data-grid\";\r\nconst url = `${process.env.REACT_APP_BACKEND_URL}`\r\nfunction MyExportButton() {\r\n  return (\r\n    <GridToolbarContainer>\r\n      <GridToolbarExport />\r\n    </GridToolbarContainer>\r\n  );\r\n}\r\nconst DynReport = () => {\r\n  const [processName, setProcessName] = useState(\"\");\r\n  const [sheetData, setSheetData] = useState(\"\");\r\n  const [process, setProcess] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [sheetName, setSheetName] = useState(\"\")\r\n  const [prcss, setProcesses] = useState(\"\")\r\n  const [datas, setData] = useState([])\r\n  const [show, setShow] = useState(false);\r\n\r\n  //Validation\r\n  useEffect(() => {\r\n    (() => {\r\n      // Fetch all the forms we want to apply custom Bootstrap validation styles to\r\n      const forms = document.querySelectorAll(\".needs-validation\");\r\n      // Loop over them and prevent submission\r\n      Array.from(forms).forEach((form) => {\r\n        form.addEventListener(\r\n          \"submit\",\r\n          (event) => {\r\n            if (!form.checkValidity()) {\r\n              event.preventDefault();\r\n              event.stopPropagation();\r\n            }\r\n            form.classList.add(\"was-validated\");\r\n          },\r\n          false\r\n        );\r\n      });\r\n    })();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"S.No.\",\r\n      headerClassName: \" small\",\r\n      cellClassName: \"small font-weight-bold\",\r\n      width: 120,\r\n    },\r\n    {\r\n      field: \"agentname\",\r\n      headerClassName: \" small\",\r\n      cellClassName: \"small font-weight-bold\",\r\n      headerName: \"Agent Name\",\r\n      width: 130,\r\n      renderCell: (row) =>\r\n        <td>\r\n          <NavLink target='_blank' to={`/d-agent-sheetview?id=${row.row._id}&calltype=${row.row.calltype}&callid=${row.row.callid}&mobile=${row.row.mobile}&acht=${row.row.acht}&auditeeid=${row.row.auditeeid}&sheetid=${row.row.sheetid}&extrafield1=${row.row.extrafield1}&extrafield2=${row.row.extrafield2}`}>\r\n            {row.row.agentname}\r\n          </NavLink>\r\n        </td>\r\n    },\r\n    {\r\n      field: \"obtainedMarks\",\r\n      headerClassName: \" small\",\r\n      cellClassName: \"small font-weight-bold\",\r\n      headerName: \"Obtained Marks\",\r\n      width: 150,\r\n    },\r\n    {\r\n      field: \"fatalcount\",\r\n      headerClassName: \" small\",\r\n      cellClassName: \"small font-weight-bold\",\r\n      headerName: \"Fatal Count\",\r\n      width: 150,\r\n    },\r\n    {\r\n      field: \"maximummarks\",\r\n      headerClassName: \" small\",\r\n      cellClassName: \"small font-weight-bold\",\r\n      headerName: \"Maximum Marks\",\r\n      width: 140,\r\n    },\r\n    {\r\n      field: \"feedback\",\r\n      headerClassName: \" small\",\r\n      cellClassName: \"small font-weight-bold\",\r\n      headerName: \"Feedback\",\r\n      width: 150,\r\n    },\r\n    {\r\n      field: \"finalScore\",\r\n      headerClassName: \" small\",\r\n      cellClassName: \"small font-weight-bold\",\r\n      headerName: \"Final Score\",\r\n      width: 140,\r\n    },\r\n    {\r\n      field: \"auditor_name\",\r\n      headerClassName: \" small\",\r\n      cellClassName: \"small font-weight-bold\",\r\n      headerName: \"Auditor Name\",\r\n      width: 140,\r\n    },\r\n\r\n    {\r\n      field: \"rebuttalstatus\",\r\n      headerClassName: \" small\",\r\n      cellClassName: \"small font-weight-bold\",\r\n      headerName: \"Is Rebuttal?\",\r\n      width: 150,\r\n    },\r\n    {\r\n      field: \"calibrationstatus\",\r\n      headerName: \"Is Calibrated?\",\r\n      headerClassName: \" small\",\r\n      cellClassName: \"small font-weight-bold\",\r\n      width: 150,\r\n    },\r\n  ];\r\n\r\n\r\n  const handleChangeProcess = (e) => {\r\n    e.preventDefault();\r\n    const getdata = async () => {\r\n      const process = e.target.value;\r\n      var a = process.split('|')\r\n      var cm_id = a[3]\r\n      setProcess(e.target.value);\r\n      const res = await fetch(`${url}/api/find-data-with-process-name`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          cm_id,\r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.status === 422 || !data) {\r\n        console.log(\"error \");\r\n      } else {\r\n        setProcessName(data);\r\n      }\r\n    };\r\n    getdata();\r\n  };\r\n\r\n  const handleSheetData = (e) => {\r\n    e.preventDefault();\r\n    const postdata = async () => {\r\n      const getdynamiccollection = e.target.value;\r\n      setSheetName(getdynamiccollection)\r\n      const res = await fetch(`${url}/api/get-dynamic-collection-data`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          getdynamiccollection,\r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.status === 422 || !data) {\r\n        console.log(\"error \");\r\n      } else {\r\n        if (!data) {\r\n          console.log(\"No Data!\");\r\n        } else {\r\n          setSheetData(data);\r\n        }\r\n      }\r\n    };\r\n    postdata();\r\n\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (!startDate || !endDate) {\r\n      return false\r\n    } else {\r\n      const date1 = startDate.toLocaleDateString();\r\n      const date2 = endDate.toLocaleDateString();\r\n      const employeeId = isAuth().EmployeeID\r\n      const postdata1 = async () => {\r\n        const sheet_name = sheetName\r\n        const res = await fetch(`${url}/api/d-report-get`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            date1, date2, process, sheet_name, employeeId\r\n          }),\r\n        });\r\n        const data = await res.json();\r\n        if (res.status === 422 || !data) {\r\n          console.log(\"error \");\r\n        } else {\r\n          if (!data) {\r\n            console.log(\"No Data!\");\r\n          } else {\r\n            setData(data);\r\n          }\r\n        }\r\n      };\r\n      postdata1();\r\n      setShow(true);\r\n    }\r\n  }\r\n  var rbtl = \"\"\r\n  var cal = \"\"\r\n  const rows = datas.map((element, index) => ({\r\n    abc: (element.rebuttalJoin.length > 0) ? rbtl = \"Yes\" : rbtl = 'No',\r\n    ccf: element.caliJoin.length > 0 ? cal = \"Yes\" : cal = \"No\",\r\n    id: index + 1,\r\n    _id: element._id,\r\n    auditor_name: element.auditor_name,\r\n    maximummarks: element.maximumMarks,\r\n    obtainedMarks: element.obtainedMarks,\r\n    finalScore: element.finalScore,\r\n    fatalcount: element.fatalCount,\r\n    agentname: element.auditee_name,\r\n    feedback: element.auditor_remark,\r\n    rebuttalstatus: rbtl,\r\n    calibrationstatus: cal,\r\n    calltype: element.calltype,\r\n    extrafield1: element.extrafield1,\r\n    extrafield2: element.extrafield2,\r\n    callid: element.callid,\r\n    mobile: element.msisdn,\r\n    acht: element.acht,\r\n    auditeeid: element.auditee_id,\r\n    sheetid: element.sheet_name\r\n  }));\r\n\r\n  //For process\r\n  useEffect(() => {\r\n    const postdata1 = async () => {\r\n      const employeeId = isAuth().EmployeeID\r\n      const res = await fetch(`${url}/api/d-master-report-process`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          employeeId\r\n        }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.status === 422 || !data) {\r\n        console.log(\"error \");\r\n      } else {\r\n        if (!data) {\r\n          console.log(\"No Data!\");\r\n        } else {\r\n          if (data.length > 0) {\r\n            setProcesses(data);\r\n          }\r\n\r\n        }\r\n      }\r\n    };\r\n    postdata1()\r\n\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Menu />\r\n      <ToastContainer />\r\n      <div className=\"content-wrapper\">\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <form id=\"form1\" noValidate\r\n              className=\"needs-validation\" onSubmit={handleSubmit}>\r\n              <div className=\"row mt-2\">\r\n                <div style={{ fontSize: \"12px\" }} className=\"col-md-12\">\r\n                  <div className=\"card card-info mt-3\">\r\n                    <div className=\"card-header\">\r\n                      <h3 style={{ fontSize: \"12px\" }} className=\"card-title\">\r\n                        Report\r\n                      </h3>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div id=\"process\" className=\" form-group col-md-3\">\r\n                          <label htmlFor=\"xyz\">Process:</label>\r\n                          <span style={{ color: \"red\" }}>*</span>\r\n                          <select\r\n                            id=\"Auditor\"\r\n                            name=\"process\"\r\n                            onChange={handleChangeProcess}\r\n                            className=\"form-control form-control-sm\"\r\n                            style={{ fontSize: \"12.4px\" }}\r\n                            required\r\n                          >\r\n                            <option value=\"\">--Select--</option>\r\n                            {(Object.values(prcss).length >= 1) ? prcss ? prcss.map((element) => {\r\n\r\n                              return <option value={element.Process} key={element.cm_id}>{element}</option>\r\n                            }) : null : null}\r\n                          </select>\r\n                          <div className=\"invalid-feedback\">\r\n                            Please choose a process.\r\n                          </div>\r\n                        </div>\r\n                        <div className=\" form-group col-md-3\">\r\n                          <label htmlFor=\"xyz\">Sheet:</label>\r\n                          <span style={{ color: \"red\" }}>*</span>\r\n                          <select\r\n                            name=\"collectionname\"\r\n                            onChange={handleSheetData}\r\n                            className=\"form-control form-control-sm\"\r\n                            style={{ fontSize: \"12.4px\" }}\r\n                            required\r\n                          >\r\n                            <option value=\"\">--Select--</option>\r\n                            {processName\r\n                              ? processName.map((element) => {\r\n                                var collection = element.collectionname.split('_')\r\n                                var newSheetName = collection.slice(1);\r\n                                return (\r\n                                  <option key={element._id} value={element.collectionname}>\r\n                                    {newSheetName.join('_')}\r\n                                  </option>\r\n                                );\r\n                              })\r\n                              : \"\"}\r\n                          </select>\r\n                          <div className=\"invalid-feedback\">\r\n                            Please choose a sheet.\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group col-md-2\">\r\n                          <label\r\n                            style={{ fontSize: \"12px\" }}\r\n                            htmlFor=\"date1\"\r\n                            className=\"form-label\"\r\n                          >\r\n                            From:\r\n                          </label>\r\n                          <DatePicker\r\n                            selected={startDate}\r\n                            selectsStart\r\n                            className=\"form-control form-control-sm\"\r\n                            placeholderText=\"Select Date\"\r\n                            value={startDate}\r\n                            onChange={(date) => setStartDate(date)}\r\n                            dateFormat=\"yyyy-MM-dd\"\r\n                            id=\"date1\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group col-md-2\">\r\n                          <label\r\n                            style={{ fontSize: \"12px\" }}\r\n                            htmlFor=\"date2\"\r\n                            className=\"form-label\"\r\n                          >\r\n                            To:\r\n                          </label>\r\n                          <DatePicker\r\n                            selected={endDate}\r\n                            dateFormat=\"yyyy-MM-dd\"\r\n                            className=\"form-control form-control-sm\"\r\n                            selectsEnd\r\n                            placeholderText=\"Select Date\"\r\n                            minDate={startDate}\r\n                            value={endDate}\r\n                            onChange={(date) => setEndDate(date)}\r\n                            id=\"date2\"\r\n                            autoComplete=\"off\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <div className='mt-4 col-md-2'>\r\n                          <button\r\n                            type='submit'\r\n                            style={{ fontSize: '11.7px' }}\r\n                            className=\"btn btn-info btn-sm\"\r\n                          >GET DATA</button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card mt-5\">\r\n                        {show ? (\r\n                          <DataGrid\r\n                            style={{ fontWeight: \"400\" }}\r\n                            components={{\r\n                              Toolbar: MyExportButton,\r\n                            }}\r\n                            density=\"compact\"\r\n                            autoHeight\r\n                            getRowId={(element) => element._id}\r\n                            rows={rows}\r\n                            columns={columns}\r\n                            initialState={{\r\n                              pagination: {\r\n                                paginationModel: {\r\n                                  pageSize: 20,\r\n                                },\r\n                              },\r\n                            }}\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DynReport"],"names":["url","concat","process","MyExportButton","_jsx","GridToolbarContainer","children","GridToolbarExport","_useState","useState","_useState2","_slicedToArray","processName","setProcessName","_useState3","_useState4","setSheetData","_useState5","_useState6","setProcess","_useState7","_useState8","startDate","setStartDate","_useState9","_useState10","endDate","setEndDate","_useState11","_useState12","sheetName","setSheetName","_useState13","_useState14","prcss","setProcesses","_useState15","_useState16","datas","setData","_useState17","_useState18","show","setShow","useEffect","forms","document","querySelectorAll","Array","from","forEach","form","addEventListener","event","checkValidity","preventDefault","stopPropagation","classList","add","columns","field","headerName","headerClassName","cellClassName","width","renderCell","row","NavLink","target","to","_id","calltype","callid","mobile","acht","auditeeid","sheetid","extrafield1","extrafield2","agentname","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee4","e","date1","date2","employeeId","postdata1","wrap","_context4","prev","next","abrupt","toLocaleDateString","isAuth","EmployeeID","_ref4","_callee3","sheet_name","res","data","_context3","fetch","method","headers","body","JSON","stringify","sent","json","status","console","log","stop","apply","arguments","_x","rbtl","cal","rows","map","element","index","abc","rebuttalJoin","length","ccf","caliJoin","id","auditor_name","maximummarks","maximumMarks","obtainedMarks","finalScore","fatalcount","fatalCount","auditee_name","feedback","auditor_remark","rebuttalstatus","calibrationstatus","msisdn","auditee_id","_ref5","_callee5","_context5","_jsxs","_Fragment","Header","Menu","ToastContainer","className","noValidate","onSubmit","style","fontSize","htmlFor","color","name","onChange","getdata","_ref","_callee","a","cm_id","_context","value","split","required","Object","values","Process","postdata","_ref2","_callee2","getdynamiccollection","_context2","newSheetName","collectionname","slice","join","DatePicker","selected","selectsStart","placeholderText","date","dateFormat","autoComplete","selectsEnd","minDate","type","DataGrid","fontWeight","components","Toolbar","density","autoHeight","getRowId","initialState","pagination","paginationModel","pageSize","Footer"],"sourceRoot":""}